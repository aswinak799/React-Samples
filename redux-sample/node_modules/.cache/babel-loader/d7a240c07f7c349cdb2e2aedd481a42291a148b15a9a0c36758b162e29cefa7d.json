{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  value: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialCounterState,\n  reducers: {\n    increment(state, action) {\n      state.value += action.payload;\n    },\n    decrement(state) {\n      state.value--;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst authState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: authState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = aut.actions;\n\n// const counterReducer = (state = initialState, action)=>{\n//     if (action.type === 'INCREMENT'){\n//         return {\n//             counter: state.counter + action.payload,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === 'DECREMENT'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'TOGGLE'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n\n// }\n\n// const store = createStore(counterReducer);\n\n// const store = createStore\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCounterState","value","showCounter","counterSlice","name","reducers","increment","state","action","payload","decrement","toggle","authState","isAuthenticated","authSlice","initialState","login","logout","store","reducer","counter","auth","counterActions","actions","authActions","aut"],"sources":["/home/cybrosys/react/redux-sample/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialCounterState = { value: 0, showCounter: true }\n\nconst counterSlice = createSlice({\n    name:'counter',\n    initialCounterState,\n    reducers: {\n        increment(state, action){\n            state.value += action.payload;\n        },\n        decrement(state){\n            state.value--;\n        },\n        toggle(state){\n            state.showCounter = !state.showCounter;\n        }\n    }\n})\n\nconst authState = { isAuthenticated: false}\nconst authSlice = createSlice({\n    name: 'authentication',\n    initialState: authState,\n    reducers: {\n        login(state){\n            state.isAuthenticated = true;\n        },\n        logout(state){\n            state.isAuthenticated = false;\n        }\n\n    }\n\n})\nconst store = configureStore({\n    reducer: { counter: counterSlice.reducer, auth: authSlice.reducer}\n})\n\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = aut.actions;\n\n// const counterReducer = (state = initialState, action)=>{\n//     if (action.type === 'INCREMENT'){\n//         return {\n//             counter: state.counter + action.payload,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === 'DECREMENT'){\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'TOGGLE'){\n//         return {\n//             ...state,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n    \n// }\n\n// const store = createStore(counterReducer);\n\n// const store = createStore\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D,MAAMC,mBAAmB,GAAG;EAAEC,KAAK,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAE3D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAC,SAAS;EACdJ,mBAAmB;EACnBK,QAAQ,EAAE;IACNC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACpBD,KAAK,CAACN,KAAK,IAAIO,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,SAASA,CAACH,KAAK,EAAC;MACZA,KAAK,CAACN,KAAK,EAAE;IACjB,CAAC;IACDU,MAAMA,CAACJ,KAAK,EAAC;MACTA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMU,SAAS,GAAG;EAAEC,eAAe,EAAE;AAAK,CAAC;AAC3C,MAAMC,SAAS,GAAGf,WAAW,CAAC;EAC1BK,IAAI,EAAE,gBAAgB;EACtBW,YAAY,EAAEH,SAAS;EACvBP,QAAQ,EAAE;IACNW,KAAKA,CAACT,KAAK,EAAC;MACRA,KAAK,CAACM,eAAe,GAAG,IAAI;IAChC,CAAC;IACDI,MAAMA,CAACV,KAAK,EAAC;MACTA,KAAK,CAACM,eAAe,GAAG,KAAK;IACjC;EAEJ;AAEJ,CAAC,CAAC;AACF,MAAMK,KAAK,GAAGpB,cAAc,CAAC;EACzBqB,OAAO,EAAE;IAAEC,OAAO,EAAEjB,YAAY,CAACgB,OAAO;IAAEE,IAAI,EAAEP,SAAS,CAACK;EAAO;AACrE,CAAC,CAAC;AAGF,OAAO,MAAMG,cAAc,GAAGnB,YAAY,CAACoB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGC,GAAG,CAACF,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}