{"ast":null,"code":"var _jsxFileName = \"/home/cybrosys/react/avanced router/frontend/src/pages/EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {} = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"INughd91pbU3akNFwj3vwrLVU3Y=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  const resData = await response.json();\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event!'\n    }, {\n      status: 500\n    });\n  } else {\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return {isError : true, message: 'Could not fetch data!...'}\n    // throw new Response(JSON.stringify({ message: 'could not fetch events!'}), {status:500,})\n    throw json({\n      message: 'could not fetch events!'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  req,\n  params\n}) {\n  const id = params.id;\n  return defer({\n    events: loadEvents(),\n    event: loadEvent(id)\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const id = params.id;\n  const response = await fetch('http://localhost:8080/events/' + id, {\n    method: 'delete'\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event!'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","Await","defer","json","redirect","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","children","resolve","event","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","loadEvent","id","response","fetch","resData","ok","message","status","loadEvents","events","loader","req","params","action","request","method","$RefreshReg$"],"sources":["/home/cybrosys/react/avanced router/frontend/src/pages/EventDetail.jsx"],"sourcesContent":["import React from 'react';\nimport { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem'\n\nconst EventDetailPage = () => {\n    const {} = useRouteLoaderData('event-detail');\n    return (\n        <><Await resolve={event}>\n\n        </Await>\n       <EventItem event={data.event} />\n        </>\n    );\n}\n\nexport default EventDetailPage;\n\n\nasync function loadEvent(id) {\n    const response = await fetch('http://localhost:8080/events/' + id)\n    const resData = await response.json();\n    if (!response.ok) {\n        throw json({message: 'Could not fetch details for selected event!'}, {status: 500})\n    }else{\n        return resData.event;\n    }\n}\n\nasync function loadEvents() {\n    const response = await fetch(\"http://localhost:8080/events\");\n  \n    if (!response.ok) {\n      // return {isError : true, message: 'Could not fetch data!...'}\n      // throw new Response(JSON.stringify({ message: 'could not fetch events!'}), {status:500,})\n      throw json({ message: 'could not fetch events!'}, {status:500})\n    } else {\n      const resData = await response.json();\n      return resData.events;\n    }\n  }\n\nexport  async function loader ({req, params}) {\n    const id = params.id;\n    return defer({\n        events: loadEvents(),\n        event: loadEvent(id),\n    })\n    \n}\n\nexport async function action ({params, request}) {\n    const id = params.id;\n    const response = await fetch('http://localhost:8080/events/' + id, {\n        method: 'delete'\n    });\n    if (!response.ok) {\n        throw json(\n            {\n                message: 'Could not fetch details for selected event!'\n            }, \n            {\n                status: 500\n            });\n    }\n    return redirect('/events')\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,kBAAkB,QAAQ,kBAAkB;AACnF,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAAC,CAAC,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAC7C,oBACIG,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBAAEL,OAAA,CAACP,KAAK;MAACa,OAAO,EAAEC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB,CAAC,eACTX,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEK,IAAI,CAACL;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7B,CAAC;AAEX,CAAC;AAAAP,EAAA,CATKD,eAAe;EAAA,QACNN,kBAAkB;AAAA;AAAAgB,EAAA,GAD3BV,eAAe;AAWrB,eAAeA,eAAe;AAG9B,eAAeW,SAASA,CAACC,EAAE,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAClE,MAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACrB,IAAI,CAAC,CAAC;EACrC,IAAI,CAACqB,QAAQ,CAACG,EAAE,EAAE;IACd,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAE;IAA6C,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACvF,CAAC,MAAI;IACD,OAAOH,OAAO,CAACX,KAAK;EACxB;AACJ;AAEA,eAAee,UAAUA,CAAA,EAAG;EACxB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACG,EAAE,EAAE;IAChB;IACA;IACA,MAAMxB,IAAI,CAAC;MAAEyB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACjE,CAAC,MAAM;IACL,MAAMH,OAAO,GAAG,MAAMF,QAAQ,CAACrB,IAAI,CAAC,CAAC;IACrC,OAAOuB,OAAO,CAACK,MAAM;EACvB;AACF;AAEF,OAAQ,eAAeC,MAAMA,CAAE;EAACC,GAAG;EAAEC;AAAM,CAAC,EAAE;EAC1C,MAAMX,EAAE,GAAGW,MAAM,CAACX,EAAE;EACpB,OAAOrB,KAAK,CAAC;IACT6B,MAAM,EAAED,UAAU,CAAC,CAAC;IACpBf,KAAK,EAAEO,SAAS,CAACC,EAAE;EACvB,CAAC,CAAC;AAEN;AAEA,OAAO,eAAeY,MAAMA,CAAE;EAACD,MAAM;EAAEE;AAAO,CAAC,EAAE;EAC7C,MAAMb,EAAE,GAAGW,MAAM,CAACX,EAAE;EACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,EAAE;IAC/Dc,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAI,CAACb,QAAQ,CAACG,EAAE,EAAE;IACd,MAAMxB,IAAI,CACN;MACIyB,OAAO,EAAE;IACb,CAAC,EACD;MACIC,MAAM,EAAE;IACZ,CAAC,CAAC;EACV;EACA,OAAOzB,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAiB,EAAA;AAAAiB,YAAA,CAAAjB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}