{"ast":null,"code":"var _jsxFileName = \"/home/cybrosys/react/12-adv-starting-project/frontend/src/pages/EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { json, us } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 8\n  }, this);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", true);\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  req,\n  params\n}) {\n  const id = params.id;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  const resData = await response.json();\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event!'\n    }, {\n      status: 500\n    });\n  } else {\n    return resData;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","us","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","useLoaderData","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","req","params","id","response","fetch","resData","ok","message","status","$RefreshReg$"],"sources":["/home/cybrosys/react/12-adv-starting-project/frontend/src/pages/EventDetail.jsx"],"sourcesContent":["import React from 'react';\nimport { json, us } from 'react-router-dom';\nimport EventItem from '../components/EventItem'\n\nconst EventDetailPage = () => {\n    const data = useLoaderData();\n    return (\n       <EventItem event={data.event} />\n    );\n}\n\nexport default EventDetailPage;\n\nexport  async function loader ({req, params}) {\n    const id = params.id;\n    const response = await fetch('http://localhost:8080/events/' + id)\n    const resData = await response.json();\n    if (!response.ok) {\n        throw json({message: 'Could not fetch details for selected event!'}, {status: 500})\n    }else{\n        return resData;\n    }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,EAAE,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGC,aAAa,CAAC,CAAC;EAC5B,oBACGJ,OAAA,CAACF,SAAS;IAACO,KAAK,EAAEF,IAAI,CAACE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEvC,CAAC;AAAAP,EAAA,CALKD,eAAe;AAAAS,EAAA,GAAfT,eAAe;AAOrB,eAAeA,eAAe;AAE9B,OAAQ,eAAeU,MAAMA,CAAE;EAACC,GAAG;EAAEC;AAAM,CAAC,EAAE;EAC1C,MAAMC,EAAE,GAAGD,MAAM,CAACC,EAAE;EACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAClE,MAAMG,OAAO,GAAG,MAAMF,QAAQ,CAACnB,IAAI,CAAC,CAAC;EACrC,IAAI,CAACmB,QAAQ,CAACG,EAAE,EAAE;IACd,MAAMtB,IAAI,CAAC;MAACuB,OAAO,EAAE;IAA6C,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACvF,CAAC,MAAI;IACD,OAAOH,OAAO;EAClB;AACJ;AAAC,IAAAP,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}