{"ast":null,"code":"var _jsxFileName = \"/home/cybrosys/react/avanced router/frontend/src/pages/EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: () => /*#__PURE__*/_jsxDEV(EventsList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"YH6S/5DlouQxLGgsivBZdrfeLPQ=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  const resData = await response.json();\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event!'\n    }, {\n      status: 500\n    });\n  } else {\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return {isError : true, message: 'Could not fetch data!...'}\n    // throw new Response(JSON.stringify({ message: 'could not fetch events!'}), {status:500,})\n    throw json({\n      message: 'could not fetch events!'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  req,\n  params\n}) {\n  const id = params.id;\n  return defer({\n    events: loadEvents(),\n    event: loadEvent(id)\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const id = params.id;\n  const response = await fetch('http://localhost:8080/events/' + id, {\n    method: 'delete'\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event!'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","Await","defer","json","redirect","useRouteLoaderData","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","response","fetch","resData","ok","message","status","loadEvents","loader","req","params","action","request","method","$RefreshReg$"],"sources":["/home/cybrosys/react/avanced router/frontend/src/pages/EventDetail.jsx"],"sourcesContent":["import React from 'react';\nimport { Await, defer, json, redirect, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem'\nimport EventsList from '../components/EventsList';\n\nconst EventDetailPage = () => {\n    const { event, events} = useRouteLoaderData('event-detail');\n    return (\n      <>\n        <Await resolve={event}>\n          { (loadedEvent) => <EventItem event={loadedEvent} /> }\n        </Await>\n        <Await resolve={events}>\n            { () => <EventsList  /> }\n        </Await>\n      </>\n    );\n}\n\nexport default EventDetailPage;\n\n\nasync function loadEvent(id) {\n    const response = await fetch('http://localhost:8080/events/' + id)\n    const resData = await response.json();\n    if (!response.ok) {\n        throw json({message: 'Could not fetch details for selected event!'}, {status: 500})\n    }else{\n        return resData.event;\n    }\n}\n\nasync function loadEvents() {\n    const response = await fetch(\"http://localhost:8080/events\");\n  \n    if (!response.ok) {\n      // return {isError : true, message: 'Could not fetch data!...'}\n      // throw new Response(JSON.stringify({ message: 'could not fetch events!'}), {status:500,})\n      throw json({ message: 'could not fetch events!'}, {status:500})\n    } else {\n      const resData = await response.json();\n      return resData.events;\n    }\n  }\n\nexport  async function loader ({req, params}) {\n    const id = params.id;\n    return defer({\n        events: loadEvents(),\n        event: loadEvent(id),\n    })\n    \n}\n\nexport async function action ({params, request}) {\n    const id = params.id;\n    const response = await fetch('http://localhost:8080/events/' + id, {\n        method: 'delete'\n    });\n    if (!response.ok) {\n        throw json(\n            {\n                message: 'Could not fetch details for selected event!'\n            }, \n            {\n                status: 500\n            });\n    }\n    return redirect('/events')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}