{"ast":null,"code":"var _jsxFileName = \"/home/cybrosys/react/avanced router/frontend/src/pages/NewEvent.jsx\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\n// import { json, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\n\n// export const action = async ({request, params}) => {\n//     const data = await request.formData();\n//     const eventData = {\n//         title: data.get('title'),\n//         image: data.get('image'),\n//         date: data.get('date'),\n//         description: data.get('description'),\n//     }\n\n//     const response = await fetch(\"http://localhost:8080/events\", \n//         {\n//             method: 'post',\n//             headers: {\n//                 'Content-Type' : 'application/json'\n//             },\n//             body: JSON.stringify(eventData)\n//         }\n//     );\n//     if(response.status === 422){\n//         console.log(response, \"response\");\n//         return response;\n//     }\n\n//     if (!response.ok) {\n//         throw json({ message: 'Could not save the event.' }, { status: 500 })   \n//     }\n//     return redirect('/events');\n// }\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cybrosys/react/avanced router/frontend/src/pages/NewEvent.jsx"],"sourcesContent":["import React from 'react';\nimport EventForm from '../components/EventForm'\n// import { json, redirect } from 'react-router-dom';\nconst NewEventPage = () => {\n    return (\n        <EventForm method='post' />\n    );\n}\n\nexport default NewEventPage;\n\n// export const action = async ({request, params}) => {\n//     const data = await request.formData();\n//     const eventData = {\n//         title: data.get('title'),\n//         image: data.get('image'),\n//         date: data.get('date'),\n//         description: data.get('description'),\n//     }\n\n//     const response = await fetch(\"http://localhost:8080/events\", \n//         {\n//             method: 'post',\n//             headers: {\n//                 'Content-Type' : 'application/json'\n//             },\n//             body: JSON.stringify(eventData)\n//         }\n//     );\n//     if(response.status === 422){\n//         console.log(response, \"response\");\n//         return response;\n//     }\n\n//     if (!response.ok) {\n//         throw json({ message: 'Could not save the event.' }, { status: 500 })   \n//     }\n//     return redirect('/events');\n// }\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBACID,OAAA,CAACF,SAAS;IAACI,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEnC,CAAC;AAAAC,EAAA,GAJKN,YAAY;AAMlB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}