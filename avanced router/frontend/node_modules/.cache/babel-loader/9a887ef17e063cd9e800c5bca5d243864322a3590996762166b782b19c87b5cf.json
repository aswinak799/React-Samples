{"ast":null,"code":"var _jsxFileName = \"/home/cybrosys/react/avanced router/frontend/src/pages/Events.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  //   const [isLoading, setIsLoading] = useState(false);\n  //   const [fetchedEvents, setFetchedEvents] = useState();\n  //   const [error, setError] = useState();\n\n  //   useEffect(() => {\n  //     async function fetchEvents() {\n  //       setIsLoading(true);\n  //       const response = await fetch('http://localhost:8080/events');\n\n  //       if (!response.ok) {\n  //         setError('Fetching events failed.');\n  //       } else {\n  //         const resData = await response.json();\n  //         setFetchedEvents(resData.events);\n  //       }\n  //       setIsLoading(false);\n  //     }\n\n  //     fetchEvents();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: c\n      },\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 32\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: [loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this), \"}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return {isError : true, message: 'Could not fetch data!...'}\n    // throw new Response(JSON.stringify({ message: 'could not fetch events!'}), {status:500,})\n    throw json({\n      message: 'could not fetch events!'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\nexport const loader = () => {\n  return defer({\n    events: loadEvents()\n  });\n};\n\n// return (\n//     <>\n//       <div style={{ textAlign: 'center' }}>\n//         {isLoading && <p>Loading...</p>}\n//         {error && <p>{error}</p>}\n//       </div>\n//       {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n//     </>\n//   );\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","c","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["/home/cybrosys/react/avanced router/frontend/src/pages/Events.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\n\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\n\nfunction EventsPage() {\n    const { events } = useLoaderData();\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [fetchedEvents, setFetchedEvents] = useState();\n//   const [error, setError] = useState();\n\n//   useEffect(() => {\n//     async function fetchEvents() {\n//       setIsLoading(true);\n//       const response = await fetch('http://localhost:8080/events');\n\n//       if (!response.ok) {\n//         setError('Fetching events failed.');\n//       } else {\n//         const resData = await response.json();\n//         setFetchedEvents(resData.events);\n//       }\n//       setIsLoading(false);\n//     }\n\n//     fetchEvents();\n//   }, []);\n\n    \n    return <Suspense fallback={<p style={{textAlign: c}}>Loading</p>}>\n      <Await resolve={ events }>\n      {(loadedEvents)=> <EventsList events={loadedEvents}/>}}\n    </Await></Suspense>\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // return {isError : true, message: 'Could not fetch data!...'}\n    // throw new Response(JSON.stringify({ message: 'could not fetch events!'}), {status:500,})\n    throw json({ message: 'could not fetch events!'}, {status:500})\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\n\nexport const loader = () => {\n  return defer({\n    events: loadEvents()\n  })\n};\n\n\n// return (\n//     <>\n//       <div style={{ textAlign: 'center' }}>\n//         {isLoading && <p>Loading...</p>}\n//         {error && <p>{error}</p>}\n//       </div>\n//       {!isLoading && fetchedEvents && <EventsList events={fetchedEvents} />}\n//     </>\n//   );"],"mappings":";;AAAA;;AAEA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;EACtC;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGI,oBAAOO,OAAA,CAACF,QAAQ;IAACM,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAACC,SAAS,EAAEC;MAAC,CAAE;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eAC/DR,OAAA,CAACJ,KAAK;MAACiB,OAAO,EAAGV,MAAQ;MAAAK,QAAA,GACvBM,YAAY,iBAAId,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEW;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAAC,GACxD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AACvB;AAACV,EAAA,CA5BQD,UAAU;EAAA,QACIR,aAAa;AAAA;AAAAsB,EAAA,GAD3Bd,UAAU;AA8BnB,eAAeA,UAAU;AAEzB,eAAee,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA,MAAMzB,IAAI,CAAC;MAAE0B,OAAO,EAAE;IAAyB,CAAC,EAAE;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACjE,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACvB,IAAI,CAAC,CAAC;IACrC,OAAO4B,OAAO;EAChB;AACF;AAEA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1B,OAAO5B,KAAK,CAAC;IACXQ,MAAM,EAAEa,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}